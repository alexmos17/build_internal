[
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os, sys\n\nto_delete = sys.argv[1]\nif os.path.exists(to_delete):\n  os.unlink(to_delete)\n",
      "[SLAVE_BUILD]/android-src/.repo/local_manifest.xml"
    ],
    "name": "remove local_manifest.xml",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@to_delete = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(to_delete):@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.unlink(to_delete)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[SLAVE_BUILD]/android-src",
      "511"
    ],
    "name": "makedirs android source root",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "[DEPOT_TOOLS]/repo",
      "init",
      "-u",
      "https://android.googlesource.com/platform/manifest",
      "-b",
      "master"
    ],
    "cwd": "[SLAVE_BUILD]/android-src",
    "name": "repo init"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os, sys\n\nto_delete = sys.argv[1]\nif os.path.exists(to_delete) and os.path.islink(to_delete):\n  os.unlink(to_delete)\n",
      "[SLAVE_BUILD]/android-src/external/chromium_org"
    ],
    "name": "remove chromium_org symlink",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@to_delete = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(to_delete) and os.path.islink(to_delete):@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.unlink(to_delete)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "[DEPOT_TOOLS]/repo",
      "sync",
      "-j6",
      "-d",
      "-f"
    ],
    "cwd": "[SLAVE_BUILD]/android-src",
    "name": "repo sync"
  },
  {
    "cmd": [
      "[BUILD]/scripts/slave/android/with_lunch",
      "[SLAVE_BUILD]/android-src",
      "nakasi-userdebug",
      "[BUILD]/scripts/slave/compile.py",
      "CC=foo CXX=bar",
      "droid",
      "--build-dir",
      "[SLAVE_BUILD]",
      "--src-dir",
      "[SLAVE_BUILD]/android-src",
      "--build-tool",
      "make-android",
      "--verbose"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "compile android"
  }
]