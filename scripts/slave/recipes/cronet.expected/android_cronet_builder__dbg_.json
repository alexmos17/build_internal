[
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "config",
      "--spec",
      "cache_dir = None\nsolutions = [{'deps_file': 'DEPS', 'managed': True, 'name': 'src', 'url': 'svn://svn-mirror.golo.chromium.org/chrome/trunk/src'}]\ntarget_os = ['android']"
    ],
    "name": "gclient setup"
  },
  {
    "abort_on_failure": true,
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "sync",
      "--nohooks",
      "--delete_unversioned_trees",
      "--force",
      "--revision",
      "src@4f4b02f6b7fa20a3a25682c457bbc8ad589c8a00",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "name": "gclient sync",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"solutions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 170242@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[BUILD]/scripts/slave/env_dump.py",
      "--output-json",
      "/path/to/tmp/json",
      "[SLAVE_BUILD]/src/build/android/envsetup.sh"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:%(PATH)s"
    },
    "name": "envsetup",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"GYP_DEFINES\": \"my_new_gyp_def=aaa\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"GYP_SOMETHING\": \"gyp_something_value\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"PATH\": \"./\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil, sys, os\nshutil.rmtree(sys.argv[1], True)\nshutil.rmtree(sys.argv[2], True)\nfor base, _dirs, files in os.walk(sys.argv[3]):\n  for f in files:\n    if f.endswith('.pyc'):\n      os.remove(os.path.join(base, f))\n",
      "[SLAVE_BUILD]/src/out/Debug/debug_info_dumps",
      "[SLAVE_BUILD]/src/out/Debug/test_logs",
      "[SLAVE_BUILD]/src"
    ],
    "name": "clean local files",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import shutil, sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[1], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[2], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@for base, _dirs, files in os.walk(sys.argv[3]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  for f in files:@@@",
      "@@@STEP_LOG_LINE@python.inline@    if f.endswith('.pyc'):@@@",
      "@@@STEP_LOG_LINE@python.inline@      os.remove(os.path.join(base, f))@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "runhooks"
    ],
    "env": {
      "GYP_DEFINES": "OS=android component=static_library fastbuild=1 gomadir='[BUILD]/goma' icu_use_data_file_flag=0 target_arch=arm use_goma=1",
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "gclient runhooks"
  },
  {
    "abort_on_failure": true,
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/compile.py",
      "--target",
      "Debug",
      "--src-dir",
      "[SLAVE_BUILD]/src",
      "--build-tool",
      "ninja",
      "--compiler",
      "goma",
      "--goma-dir",
      "[BUILD]/goma",
      "--",
      "cronet_package",
      "cronet_sample_test_apk"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "compile"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/buildbot/bb_device_status_check.py"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "device_status_check"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/adb_install_apk.py",
      "--apk",
      "CronetSample.apk"
    ],
    "name": "install CronetSample"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/test_runner.py",
      "instrumentation",
      "--test-apk",
      "CronetSampleTest"
    ],
    "name": "test CronetSample"
  },
  {
    "cmd": [
      "[DEPOT_TOOLS]/git_number.py"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "git_number",
    "stdout": "/path/to/tmp/"
  },
  {
    "always_run": true,
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/android/archive_build.py",
      "--target",
      "Debug",
      "--name",
      "build_product_3000.zip"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "zip_build_product"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/recipe_modules/gsutil/resources/gsutil_wrapper.py",
      "[DEPOT_TOOLS]/third_party/gsutil/gsutil",
      "cp",
      "[SLAVE_BUILD]/src/out/build_product_3000.zip",
      "gs://chromium-cronet/android/cronet-3000.zip"
    ],
    "name": "gsutil upload_build_product",
    "~followup_annotations": [
      "@@@STEP_LINK@gsutil.upload@https://storage.cloud.google.com/chromium-cronet/android/cronet-3000.zip@@@"
    ]
  },
  {
    "always_run": true,
    "cmd": [
      "rm",
      "-rf",
      "[SLAVE_BUILD]/src/out/build_product_3000.zip"
    ],
    "name": "cleanup_build"
  }
]