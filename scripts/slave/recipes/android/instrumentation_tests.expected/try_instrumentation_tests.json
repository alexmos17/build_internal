[
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "config",
      "--spec",
      "cache_dir = None\nsolutions = [{'deps_file': '.DEPS.git', 'managed': True, 'name': 'src/repo', 'url': 'svn://svn.chromium.org/chrome/trunk/src'}]\ntarget_os = ['android']"
    ],
    "name": "gclient setup",
    "seed_steps": [
      "gclient setup",
      "gclient revert",
      "gclient sync"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/gclient_safe_revert.py",
      ".",
      "[DEPOT_TOOLS]/gclient"
    ],
    "name": "gclient revert"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "sync",
      "--nohooks",
      "--revision",
      "src/repo@refs/remotes/origin/master",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "name": "gclient sync",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"solutions\": {}@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/dump_app_manifest_vars.py",
      "-b",
      "test_buildername",
      "-v",
      "[SLAVE_BUILD]/src/chrome/VERSION",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "name": "get app_manifest_vars",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"build_id\": 3333, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"date_string\": 6001, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"version_code\": 10, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"version_name\": \"some_builder_1234\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/env_dump.py",
      "--output-json",
      "/path/to/tmp/json",
      "[SLAVE_BUILD]/src/build/android/envsetup.sh"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:%(PATH)s"
    },
    "name": "envsetup",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"GYP_DEFINES\": \"my_new_gyp_def=aaa\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"GYP_SOMETHING\": \"gyp_something_value\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"PATH\": \"./\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil, sys, os\nshutil.rmtree(sys.argv[1], True)\nshutil.rmtree(sys.argv[2], True)\nfor base, _dirs, files in os.walk(sys.argv[3]):\n  for f in files:\n    if f.endswith('.pyc'):\n      os.remove(os.path.join(base, f))\n",
      "[SLAVE_BUILD]/src/out/Debug/debug_info_dumps",
      "[SLAVE_BUILD]/src/out/Debug/test_logs",
      "[SLAVE_BUILD]/src"
    ],
    "name": "clean local files",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import shutil, sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[1], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[2], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@for base, _dirs, files in os.walk(sys.argv[3]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  for f in files:@@@",
      "@@@STEP_LOG_LINE@python.inline@    if f.endswith('.pyc'):@@@",
      "@@@STEP_LOG_LINE@python.inline@      os.remove(os.path.join(base, f))@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "allow_subannotations": false,
    "cmd": [
      "[SLAVE_BUILD]/src/build/tree_truth.sh",
      "[SLAVE_BUILD]/src",
      "src",
      "src-internal",
      "src/repo"
    ],
    "name": "tree truth steps"
  },
  {
    "cmd": [
      "[BUILD]/scripts/slave/apply_svn_patch.py",
      "-p",
      "try_job_svn_patch",
      "-r",
      "[SLAVE_BUILD]/src/repo"
    ],
    "name": "apply_patch"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/download_and_extract_build.py",
      "-b",
      "parent_buildername",
      "-d",
      "[SLAVE_BUILD]/src/out",
      "-r",
      "1357",
      "-g",
      "[BUILD]/scripts/slave/gsutil"
    ],
    "name": "download_build"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/provision_devices.py",
      "-t",
      "Debug"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "provision_devices"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/buildbot/bb_device_status_check.py"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "device_status_check"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/setup_device_testing.py"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "setup_devices_for_testing"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/full_deploy.py",
      "-v",
      "--debug"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "deploy_on_devices"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/run_intrumentation_tests.py",
      "-a",
      "Smoke",
      "-d",
      "[SLAVE_BUILD]/src"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "smoke_instrumentation_tests"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/run_intrumentation_tests.py",
      "-a",
      "SmallTest",
      "-d",
      "[SLAVE_BUILD]/src"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "smalltest_instrumentation_tests"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/run_intrumentation_tests.py",
      "-a",
      "MediumTest",
      "-d",
      "[SLAVE_BUILD]/src"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "mediumtest_instrumentation_tests"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/run_intrumentation_tests.py",
      "-a",
      "LargeTest",
      "-d",
      "[SLAVE_BUILD]/src"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "largetest_instrumentation_tests"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport glob, os, sys\nfor report in glob.glob(sys.argv[1]):\n  with open(report, 'r') as f:\n    for l in f.readlines():\n      print l\n  os.remove(report)\n",
      "[SLAVE_BUILD]/src/out/Debug/test_logs/*.log"
    ],
    "name": "test_report",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import glob, os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@for report in glob.glob(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  with open(report, 'r') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@    for l in f.readlines():@@@",
      "@@@STEP_LOG_LINE@python.inline@      print l@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.remove(report)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  }
]