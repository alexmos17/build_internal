[
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "config",
      "--spec",
      "cache_dir = None\nsolutions = [{'deps_file': '.DEPS.git', 'managed': True, 'name': 'src/repo', 'url': 'svn://svn.chromium.org/chrome/trunk/src'}]\ntarget_os = ['android']"
    ],
    "name": "gclient setup",
    "seed_steps": [
      "gclient setup",
      "gclient sync"
    ]
  },
  {
    "abort_on_failure": true,
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "sync",
      "--nohooks",
      "--delete_unversioned_trees",
      "--revision",
      "src/repo@4f4b02f6b7fa20a3a25682c457bbc8ad589c8a00",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "name": "gclient sync",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"solutions\": {}@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/dump_app_manifest_vars.py",
      "-b",
      "test_buildername",
      "-v",
      "[SLAVE_BUILD]/src/chrome/VERSION",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "name": "get app_manifest_vars",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"build_id\": 3333, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"date_string\": 6001, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"version_code\": 10, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"version_name\": \"some_builder_1234\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/dump_internal_names.py",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "name": "get_internal_names",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"BUILD_BUCKET\": \"build-bucket\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"FLAKINESS_DASHBOARD_SERVER\": \"test-results.appspot.com\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"INSTRUMENTATION_TEST_DATA\": \"a:b/test/data/android/device_files\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"SCREENSHOT_BUCKET\": \"screenshot-archive\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[BUILD]/scripts/slave/env_dump.py",
      "--output-json",
      "/path/to/tmp/json",
      "[SLAVE_BUILD]/src/build/android/envsetup.sh",
      "--target-arch=arm"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:%(PATH)s"
    },
    "name": "envsetup",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"GYP_DEFINES\": \"my_new_gyp_def=aaa\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"GYP_SOMETHING\": \"gyp_something_value\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"PATH\": \"./\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil, sys, os\nshutil.rmtree(sys.argv[1], True)\nshutil.rmtree(sys.argv[2], True)\nfor base, _dirs, files in os.walk(sys.argv[3]):\n  for f in files:\n    if f.endswith('.pyc'):\n      os.remove(os.path.join(base, f))\n",
      "[SLAVE_BUILD]/src/out/Debug/debug_info_dumps",
      "[SLAVE_BUILD]/src/out/Debug/test_logs",
      "[SLAVE_BUILD]/src"
    ],
    "name": "clean local files",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import shutil, sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[1], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[2], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@for base, _dirs, files in os.walk(sys.argv[3]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  for f in files:@@@",
      "@@@STEP_LOG_LINE@python.inline@    if f.endswith('.pyc'):@@@",
      "@@@STEP_LOG_LINE@python.inline@      os.remove(os.path.join(base, f))@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "allow_subannotations": false,
    "cmd": [
      "[SLAVE_BUILD]/src/build/tree_truth.sh",
      "[SLAVE_BUILD]/src",
      "src",
      "src-internal",
      "src/repo"
    ],
    "name": "tree truth steps"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/third_party/gsutil/gsutil",
      "cp",
      "gs://build-bucket/parent_buildername/build_product_4f4b02f6b7fa20a3a25682c457bbc8ad589c8a00.zip",
      "[SLAVE_BUILD]/src/out"
    ],
    "name": "gsutil download_build_product"
  },
  {
    "cmd": [
      "unzip",
      "-o",
      "[SLAVE_BUILD]/src/out/build_product_4f4b02f6b7fa20a3a25682c457bbc8ad589c8a00.zip"
    ],
    "cwd": "[SLAVE_BUILD]/src/out",
    "name": "unzip_build_product"
  },
  {
    "can_fail_build": false,
    "cmd": [
      "[BUILD]/scripts/slave/daemonizer.py",
      "--",
      "[SLAVE_BUILD]/src/build/android/adb_logcat_monitor.py",
      "[SLAVE_BUILD]/src/out/logcat"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "spawn_logcat_monitor"
  },
  {
    "can_fail_build": false,
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/provision_devices.py",
      "-t",
      "Debug"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "provision_devices"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/buildbot/bb_device_status_check.py"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "device_status_check"
  },
  {
    "can_fail_build": false,
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/setup_device_testing.py"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "setup_devices_for_testing"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/repo/build/full_deploy.py",
      "-v",
      "--debug"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "deploy_on_devices"
  },
  {
    "always_run": true,
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/adb_install_apk.py",
      "--apk",
      "ChromeTest.apk",
      "--apk_package",
      "com.google.android.apps.chrome.tests"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "install ChromeTest.apk"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/repo/build/buildbot/tests_generator.py",
      "--test=smoke_instrumentation_tests",
      "--checkout-dir",
      "[SLAVE_BUILD]/src",
      "--target",
      "Debug",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "gen step(tests_generator.py)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@[@@@",
      "@@@STEP_LOG_LINE@json.output@  {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"cmd\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      \"path/to/test_script.py\"@@@",
      "@@@STEP_LOG_LINE@json.output@    ], @@@",
      "@@@STEP_LOG_LINE@json.output@    \"name\": \"test_step\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@]@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "path/to/test_script.py"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "test_step",
    "seed_steps": [
      "test_step"
    ]
  },
  {
    "always_run": true,
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/adb_logcat_printer.py",
      "[SLAVE_BUILD]/src/out/logcat"
    ],
    "name": "logcat_dump"
  },
  {
    "always_run": true,
    "cmd": [
      "[SLAVE_BUILD]/src/third_party/android_platform/development/scripts/stack",
      "--more-info",
      "[SLAVE_BUILD]/src/out/Debug/full_log"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "stack_tool_with_logcat_dump"
  },
  {
    "always_run": true,
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/tombstones.py",
      "-a",
      "-s",
      "-w"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "stack_tool_for_tombstones"
  },
  {
    "always_run": true,
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/asan_symbolize.py",
      "-l",
      "[SLAVE_BUILD]/src/out/Debug/full_log"
    ],
    "env": {
      "PATH": "[BUILD_INTERNAL]/scripts/slave/android:./:%(PATH)s"
    },
    "name": "stack_tool_for_asan"
  },
  {
    "always_run": true,
    "cmd": [
      "python",
      "-u",
      "\nimport glob, os, sys\nfor report in glob.glob(sys.argv[1]):\n  with open(report, 'r') as f:\n    for l in f.readlines():\n      print l\n  os.remove(report)\n",
      "[SLAVE_BUILD]/src/out/Debug/test_logs/*.log"
    ],
    "name": "test_report",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import glob, os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@for report in glob.glob(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  with open(report, 'r') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@    for l in f.readlines():@@@",
      "@@@STEP_LOG_LINE@python.inline@      print l@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.remove(report)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "always_run": true,
    "cmd": [
      "rm",
      "-rf",
      "[SLAVE_BUILD]/src/out/build_product_4f4b02f6b7fa20a3a25682c457bbc8ad589c8a00.zip"
    ],
    "name": "cleanup_build"
  }
]