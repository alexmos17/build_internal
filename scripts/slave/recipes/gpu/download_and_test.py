# Copyright 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This recipe is intended to control all of the GPU testers on the
# following waterfalls:
#   chromium.gpu
#   chromium.gpu.fyi
#   chromium.webkit
#   tryserver.chromium
# These testers are triggered by the builders on the same waterfall.

DEPS = [
  'buildbot',
  'gpu',
  'isolate',
  'path',
  'platform',
  'properties',
  'swarming_client',
  'tryserver',
]

def GenSteps(api):
  api.gpu.setup()
  yield api.buildbot.prep()

  # BUG(383353): Git checkout mysteriously fails on some Windows bot with
  # 'User Is Over Quota' error that is not reproducible outside of buildbot
  # environment. Temporary dump git curl traces to debug this.
  curl_trace_file = None
  if api.platform.is_win and (
      api.gpu.is_fyi_waterfall or api.tryserver.is_tryserver):
    curl_trace_file = api.path['slave_build'].join(
        'git_curl_trace_%s.log' % api.properties['buildnumber'])

  # The GPU recipes require the use of isolates for transmitting the
  # test binaries and data files from the builder to the tester. The
  # testers do not checkout the full Chromium tree; instead, the
  # swarming_client tools are checked out separately.
  yield api.swarming_client.checkout(curl_trace_file=curl_trace_file)
  yield api.buildbot.copy_parent_got_revision_to_got_revision()
  yield api.gpu.test_steps()

def GenTests(api):
  # The majority of the tests are in the build_and_test recipe.

  cases = []
  for plat in ['win', 'mac', 'linux']:
    for flavor in ['Debug', 'Release']:
      cases.append((plat, flavor, 'chromium.gpu.testing', ''))

  # Special case to cover 'curl_trace_file' code path.
  cases.append(('win', 'Release', 'chromium.gpu.fyi', '_fyi'))

  # Keep the additional properties in sync with the build_and_upload
  # recipe in order to catch regressions.
  for plat, flavor, master, suffix in cases:
    flavor_lower = flavor.lower()
    yield (
      api.test('%s_%s%s' % (plat, flavor_lower, suffix)) +
      api.properties.scheduled(
        build_config=flavor,
        mastername=master,
        buildername='%s %s tester' % (plat, flavor_lower),
        buildnumber=776,
        parent_buildername='%s %s builder' % (plat, flavor_lower),
        parent_buildnumber=571,
        parent_got_revision=160000,
        parent_got_webkit_revision=10000,
        parent_got_swarming_client_revision='feaaabcdef',
        # These would ordinarily be generated by the builder and passed
        # via build properties to the tester.
        swarm_hashes=api.gpu.dummy_swarm_hashes,
        # This is needed to achieve 100% coverage.
        master_class_name_for_testing='ChromiumGPUTesting',
      ) +
      api.platform.name(plat)
    )

  # One test case to cover curl_trace_file on the Windows tryservers.
  # (Remove when no longer being generated.)
  yield (
    api.test('win_release_tryserver') +
    api.properties.tryserver(
      build_config='Release',
      mastername='chromium.gpu.testing',
      buildername='win release tester',
      buildnumber=776,
      parent_buildername='win release builder',
      parent_buildnumber=571,
      parent_got_revision=160000,
      parent_got_webkit_revision=10000,
      parent_got_swarming_client_revision='feaaabcdef',
      # These would ordinarily be generated by the builder and passed
      # via build properties to the tester.
      swarm_hashes=api.gpu.dummy_swarm_hashes,
    ) +
    api.platform.name('win')
  )
