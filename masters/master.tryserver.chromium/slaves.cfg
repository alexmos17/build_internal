# -*- python -*-
# ex: set syntax=python:
# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# See master.experimental/slaves.cfg for documentation.


def expand_extra_builders(extras, total):
  """Spreads each builder's configuration across the slaves so that if a
  continuous block of slaves go missing, it reduces the likelihood that all the
  slaves for a builder configuration are missing.
  """
  extras_expanded = []
  for i in xrange(total):
    index = i % len(extras)
    builders, count = extras[index]
    if count == 1:
      extras.pop(index)
    elif count > 0:
      extras[index][1] -= 1
    extras_expanded.append(builders)
  return extras_expanded


def linux():
  """Linux VMs can hold a maximum of 4 checkouts per slave."""

  normal_slaves = range(250, 399)
  all_slaves = ['slave%d-c4' % i for i in normal_slaves]
  gpu_slaves = [3, 7, 8]
  # "precise" means "Ubuntu 12.04 'precise'".
  precise_slaves = [468, 469, 497, 502, 503]
  precise32_slaves = [211]
  perf_bisect_slaves = [79]
  perf_a4_slaves = [1]
  linux_arm_cross_slaves = [422, 423, 424]
  linux_arm_testers = [9]

  # Configurations on every VM.
  base = [
    # One line per shared directory. In decreasing usage:
    'linux', 'linux_rel', 'linux_rel_naclmore', 'linux_clang',
    'linux_chromeos', 'linux_aura', 'chromium_presubmit', 'blink_presubmit',

    'blink_bare_presubmit',

    'tools_presubmit',
  ]
  # One of the extra configuration per VM.
  # First the ones barely used. By reducing the number of available slaves, we
  # increase the "cache locally" of having a checkout already recent on the
  # slave.
  extras = [
    [['linux_chromeos_clang'], 15],
    [['linux_futura'], 15],
    [['linux_layout', 'linux_layout_rel', 'linux_blink', 'linux_blink_rel',
      'linux_blink_git', 'linux_blink_rel_git'], 7],
    [['linux_chromeos_valgrind'], 2],
    [['linux_coverage'], 2],
    [['linux_valgrind', 'linux_tsan'], 4],
    [['linux_chromeos_asan'], 3],
    [['linux_redux'], 2],
    [['linux_heapcheck'], 2],
    [['linux_nacl_sdk'], 3],
    [['linux_nacl_sdk_build'], 3],
    # These ones below are significantly used ones. They use all the remaining
    # slaves.
    [['linux_asan', 'linux_browser_asan'], -1],
  ]

  extras_expanded = expand_extra_builders(extras, len(all_slaves))

  # Set up normal slaves.
  result = []
  for index, slave in enumerate(all_slaves):
    builders = base + extras_expanded[index]
    result.append({
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': builders,
      'hostname': slave,
    })

  # Add GPU slaves.
  result.extend([
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_gpu',
      'hostname': 'gpulin%d' % i,
    } for index, i in enumerate(gpu_slaves)
  ])

  # Add Ubuntu 12.04 'precise' slaves.
  result.extend([
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': base,
      'hostname': 'vm%d-m4' % i,
    } for index, i in enumerate(precise_slaves)
  ])

  # Add Ubuntu 12.04 'precise32' slaves.
  result.extend([
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '32',
      'builder': 'linux_rel_precise32',
      'hostname': 'vm%d-m4' % i,
    } for i in precise32_slaves
  ])

  # Add experimental slave(s).
  result.extend([{
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_rel_alt',
      'hostname': 'slave101-c4',
  }])

  # Swarm dumb slaves.
  result.extend([{
      'master': 'TryServerSwarm',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'hostname': 'vm%d-m4' % i,
  } for i in range(10, 14)])

  # This is the Clang-based ThreadSanitizer v2, opposed to Valgrind-based
  # ThreadSanitizer v1 on the linux_tsan bot.
  result.extend([{
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_clang_tsan',
      'hostname': 'vm786-m4',
  }])

  # Perf bisect slaves
  result.extend([
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_perf_bisect',
      'hostname': 'chromeperf%d' % i,
    } for i in perf_bisect_slaves
  ])

  result.extend([
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_perf_bisect',
      'hostname': 'build%d-a4' % i,
    } for i in perf_a4_slaves
  ])

  result.extend([
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_layout_asan',
      'hostname': 'vm426-m4',
    }
  ])

  result.extend([
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '32',
      'builder': 'linux_layout_rel_32',
      'hostname': 'vm495-m4',
    }
  ])

  result.extend([
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_arm_cross_compile',
      'hostname': 'vm%d-m4' % i,
    } for i in linux_arm_cross_slaves
  ])

  result.extend([
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'quantal',
      'bits': '32',
      'builder': 'linux_arm_tester',
      'hostname': 'build%d-a4' % i,
    } for i in linux_arm_testers
  ])

  return result


def mac():
  extras = [
    # One line per shared directory:
    [['mac_valgrind'], 6],
    [['mac_nacl_sdk'], 6],
    [['mac_nacl_sdk_build'], 6],
    # These ones below are significantly used ones. They use all the remaining
    # slaves.
    [['mac_layout', 'mac_layout_rel', 'mac_blink', 'mac_blink_rel',
      'mac_blink_git', 'mac_blink_rel_git'], -1],
  ]
  all_old_slaves = range(600, 655)
  extras_expanded = expand_extra_builders(extras, len(all_old_slaves))
  perf_bisect_slaves = [1, 2]
  out = [
    # vms.
    {
      'master': 'TryServer',
      'builder': [
        # One line per shared directory:
        'mac_xcodebuild',
      ] + extras_expanded[index],
      'hostname': 'vm%d-m4' % number,
      'os': 'mac',
      'version': '10.6',
      'bits': '64',
    } for index, number in enumerate(all_old_slaves)
  ]
  out += [
    {
      'master': 'TryServer',
      'builder': [
          # One line per shared directory:
          'mac', 'mac_rel', 'mac_rel_naclmore',
          'mac_layout_alt', 'mac_layout_rel_alt',
          'mac_valgrind_alt',
          'mac_asan',
          'mac_nacl_sdk_alt',
      ],
      'hostname': 'vm%d-m4' % i,
      'os': 'mac',
      'version': '10.7',
      'bits': '64',
    } for i in sorted(range(666, 737))
  ]
  out += [
    # mac minis.
    {
      'master': 'TryServer',
      'os': 'mac',
      'version': '10.7',
      'bits': '64',
      'builder': 'mac_gpu',
      'hostname': 'mini%d-m4' % i,
    } for i in range(64, 67)
  ]
  out += [
    # mac retinas.
    {
      'master': 'TryServer',
      'os': 'mac',
      'version': '10.7',
      'bits': '64',
      'builder': 'mac_gpu_retina',
      'hostname': 'gpumac%d' % i,
    } for i in range(6, 9)
  ]
  out += [
    # mac swarm dumb slaves.
    {
      'master': 'TryServerSwarm',
      'os': 'mac',
      'version': '10.7',
      'bits': '64',
      'hostname': 'vm%d-m4' %i,
    } for i in range(661, 665)
  ]


  out.extend([
    {
      'master': 'TryServer',
      'os': 'mac',
      'version': '10.8',
      'bits': '64',
      'builder': 'mac_perf_bisect',
      'hostname': 'mini%d-a4' % i,
    } for i in perf_bisect_slaves
  ])

  out.extend([
    {
      'master': 'TryServer',
      'os': 'mac',
      'version': '10.7',
      'bits': '64',
      'builder': 'mac_layout_rel_lion',
      'hostname': 'vm810-m4',
    }
  ])

  out.extend([
    {
      'master': 'TryServer',
      'os': 'mac',
      'version': '10.8',
      'bits': '64',
      'builder': 'mac_layout_rel_mountainlion',
      'hostname': 'vm811-m4',
    }
  ])

  out.extend([
    {
      'master': 'TryServer',
      'os': 'mac',
      'version': '10.8',
      'bits': '64',
      'builder': 'mac_x64_rel',
      'hostname': 'vm%d-m4' % i,
    } for i in range(800, 810)
  ])

  return out


def cros():
  return [
    # vms that are set up with chromiumOS depends
    {
      'master': 'TryServer',
      'builder': 'cros_daisy',
      'hostname': 'build%d-m4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in (1,)
  ] + [
    # baremetal builders that are set up with chromiumOS depends
    {
      'master': 'TryServer',
      'builder': ['cros_x86', 'cros_amd64'],
      'hostname': 'build%d-m4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(22, 26)
  ]


def android():
  compile_slaves = [
    {
      'master': 'TryServer',
      'builder': ['android_dbg', 'android_fyi_dbg', 'android_clang_dbg',
                  'blink_android_compile_dbg', 'blink_android_compile_rel',
                  'android_rel', 'android_x86_dbg'],
      'hostname': 'vm%d-m4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(384, 422)
  ]

  test_slaves = [
    {
      'master': 'TryServer',
      'builder': ['android_dbg_triggered_tests',
                  'android_rel_triggered_tests',
                  'android_fyi_dbg_triggered_tests'],
      'hostname': 'chromeperf%d' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in (
        26, 27, 28, 29, 44, 45, 46, 50, 51, 52, 53, 54, 55, 67, 68, 69, 70, 71,
        )
  ]

  perf_bisect_slaves = [
    {
      'master': 'TryServer',
      'builder': 'android_%s_perf_bisect' % device,
      'hostname': host,
      'os': 'linux',
      'version': 'precise',
      'bits': '64'
    } for device, host in [('gn', 'chromeperf48'),
                           ('nexus4', 'build6-a4'),
                           ('nexus10', 'build8-a4')]
  ]

  aosp_slaves = [
    {
      'master': 'TryServer',
      'builder': 'android_aosp',
      'hostname': 'slave%d-c4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(520, 550)
  ]

  return compile_slaves + test_slaves + perf_bisect_slaves + aosp_slaves


def ios():
  compile_slaves = [
    {
      'master': 'TryServer',
      'builder': ['ios_rel_device', 'ios_dbg_simulator'],
      'hostname': 'mini%d-l1' % i,
      'os': 'mac',
      'version': '10.7',
    } for i in range(19, 21)
  ]

  compile_slaves.extend([
    {
      'master': 'TryServer',
      'builder': ['ios_rel_device', 'ios_dbg_simulator'],
      'hostname': 'mini%d-l1' % i,
      'os': 'mac',
      'version': '10.7',
    } for i in range(25, 43)
  ])

  # TODO(lliabraa): Add test_slaves once we're actually running iOS tests on
  # the bots.

  return compile_slaves


def windows():
  win7 = (range(103, 106) + range(111, 114) + range(118, 152) +
          range(300, 384) + range(510, 519) + range(525, 530))
  new_win7 = (range(164, 207) + range(208, 211) + range(212, 215) +
          range(216, 219) + range(220, 223) + range(224, 227) +
          range(228, 231))
  win7_x64 = range(231, 234) + range(235, 252) + range(750, 782)
  perf_bisect_slave_ids = [82]
  perf_a4_slaves = [2, 3]

  normal_slaves = [
    {
      'master': 'TryServer',
      'builder': [
        'win', 'win_rel_naclmore', 'win_rel'
      ],
      'hostname': 'vm%d-m4' % number,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for number in win7
  ]
  win_x64_slaves = [
    {
      'master': 'TryServer',
      'builder': ['win_x64_rel'],
      'hostname': 'vm%d-m4' % number,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for number in win7_x64
  ]
  nacl_sdk_slaves = [
    {
      'master': 'TryServer',
      'builder': [
        'win_nacl_sdk', 'win_nacl_sdk_build'
      ],
      'hostname': 'vm%d-m4' % number,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for number in range(519, 521)
  ]
  layout_slaves = [
    {
      'master': 'TryServer',
      'builder': [
        'win_layout', 'win_layout_rel', 'win_blink', 'win_blink_rel',
        'win_blink_git', 'win_blink_rel_git',
      ],
      'hostname': 'vm%d-m4' % number,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for number in ([106, 114] + range(152, 158) + range(521, 525) +
                     range(782, 786))
  ]
  win7_aura_slaves = [
    {
      'master': 'TryServer',
      'builder': [
        'win7_aura'
      ],
      'hostname': 'vm%d-m4' % number,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for number in new_win7
  ]
  win8_aura_slaves = [
    {
      'master': 'TryServer',
      'builder': [
        'win8_aura',
      ],
      'hostname': 'vm115-m4',
      'os': 'win',
      'version': 'win8',
      'bits': '64',
    }
  ]
  drmemory_slaves = [
    {
      'master': 'TryServer',
      # We can also add 'win' to the list of builders but let's not take risks
      # as this is the only Win7 tryslave now.
      'builder': ['win_drmemory'],
      'hostname': 'vm%d-m4' % i,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for i in (530,)
  ]
  chromeframe_slave = [
    {
      'master': 'TryServer',
      'builder': ['win_cf'],
      'hostname': 'vm531-m4',  # Custom slave that runs IE8 instead of IE9.
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    }
  ]
  gpu_slaves = [
    {
      'master': 'TryServer',
      'builder': ['win_gpu'],
      'hostname': 'gpuwin%d' % i,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for i in range(3, 6)
  ]
  swarm_slaves = []
  for i in range(511, 520):
    swarm_slaves.extend(
      {
        'master': 'TryServer',
        'builder': ['swarm_triggered'],
        'hostname': 'slave%d-c4' % i,
        'os': 'linux',
        'version': 'precise',
        'bits': '64',
        'subdir': str(j),
      } for j in xrange(20))

  win_tsan_slave = [
    {
      'master': 'TryServer',
      'builder': ['win_tsan'],
      'hostname': 'vm158-m4',
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    }
  ]
  swarm_dumb_slaves = [
    {
      'master': 'TryServerSwarm',
      'hostname': 'vm%d-m4' % i,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for i in range(2, 6) + range(16, 56)
  ]

  # Bisect slaves
  perf_bisect_slaves = [
    {
      'master': 'TryServer',
      'os': 'win',
      'version': 'win7',
      'bits': '64',
      'builder': 'win_perf_bisect',
      'hostname': 'chromeperf%d' % i,
    } for i in perf_bisect_slave_ids
  ]

  perf_bisect_slaves.extend(
    {
      'master': 'TryServer',
      'os': 'win',
      'version': 'win7',
      'bits': '64',
      'builder': 'win_perf_bisect',
      'hostname': 'build%d-a4' % i,
    } for i in perf_a4_slaves
  )

  return (
      normal_slaves +
      nacl_sdk_slaves +
      layout_slaves +
      win7_aura_slaves +
      win8_aura_slaves +
      drmemory_slaves +
      chromeframe_slave +
      gpu_slaves +
      swarm_slaves +
      win_tsan_slave +
      win_x64_slaves +
      swarm_dumb_slaves +
      perf_bisect_slaves)


slaves = linux() + mac() + windows() + cros() + android() + ios()
