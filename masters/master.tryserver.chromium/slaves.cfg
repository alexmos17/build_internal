# -*- python -*-
# ex: set syntax=python:
# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# See master.experimental/slaves.cfg for documentation.


def expand_extra_builders(extras, total):
  """Spreads each builder's configuration across the slaves so that if a
  continuous block of slaves go missing, it reduces the likelihood that all the
  slaves for a builder configuration are missing.
  """
  extras_expanded = []
  for i in xrange(total):
    index = i % len(extras)
    builders, count = extras[index]
    if count == 1:
      extras.pop(index)
    elif count > 0:
      extras[index][1] -= 1
    extras_expanded.append(builders)
  return extras_expanded


def linux():
  """Linux VMs can hold a maximum of 4 checkouts per slave."""

  normal_slaves = range(250, 399)
  all_slaves = ['slave%d-c4' % i for i in normal_slaves]
  presubmit_slaves = ['slave%d-c4' % i for i in range(121, 131)]
  # "precise" means "Ubuntu 12.04 'precise'".
  precise_slaves = [468, 469, 497, 502, 503]
  precise32_slaves = [211]
  perf_bisect_builders = [65, 66, 67, 68]
  perf_bisect_slaves = [79]
  perf_a4_slaves = [1]
  linux_arm_cross_slaves = [422, 423, 424]
  linux_arm_testers = [9]

  # Have a dedicated pool for presubmit jobs - all CQ jobs
  # need a presubmit first and so must be responsive.
  presubmit_builders = ['chromium_presubmit', 'blink_presubmit']

  # Configurations on every VM.
  base = presubmit_builders + [
    # One line per shared directory. In decreasing usage:
    'linux', 'linux_rel',
    'linux_chromium_dbg', 'linux_chromium_rel',
    'linux_chromium_compile_dbg', 'linux_chromium_compile_rel',
    'linux_rel_naclmore',
    'linux_chromium_gn_dbg', 'linux_chromium_gn_rel',
    'android_chromium_gn_compile_dbg', 'android_chromium_gn_compile_rel',

    'linux_clang', 'linux_chromium_clang_dbg', 'linux_chromium_clang_rel',

    'linux_chromeos',
    'linux_chromium_chromeos_dbg', 'linux_chromium_chromeos_rel',
    'linux_nacl_sdk_build',

    'tools_build_presubmit',
  ]

  # One of the extra configuration per VM.
  # First the ones barely used. By reducing the number of available slaves, we
  # increase the "cache locally" of having a checkout already recent on the
  # slave.
  extras = [
    [['linux_chromeos_clang',
      'linux_chromium_chromeos_clang_dbg',
      'linux_chromium_chromeos_clang_rel'], 15],
    [['linux_futura'], 15],
    [['linux_chromeos_valgrind'], 2],
    [['linux_valgrind', 'linux_tsan'], 4],
    [['linux_chromeos_asan', 'linux_chromeos_browser_asan'], 6],
    [['linux_redux'], 2],
    [['linux_nacl_sdk'], 3],
    [['linux_ecs_ozone'], 3],
    # These ones below are significantly used ones. They use all the remaining
    # slaves.
    [['linux_asan', 'linux_browser_asan'], -1],
    [['linux_layout', 'linux_layout_rel'], -1],
  ]

  extras_expanded = expand_extra_builders(extras, len(all_slaves))

  # Set up normal slaves.
  result = []
  for index, slave in enumerate(all_slaves):
    builders = base + extras_expanded[index]
    result.append({
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': builders,
      'hostname': slave,
    })

  result.extend(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': presubmit_builders,
      'hostname': slave,
    } for slave in presubmit_slaves
  )

  # Add Ubuntu 12.04 'precise' slaves.
  result.extend(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': base,
      'hostname': 'vm%d-m4' % i,
    } for index, i in enumerate(precise_slaves)
  )

  # Add Ubuntu 12.04 'precise32' slaves.
  result.extend(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '32',
      'builder': 'linux_rel_precise32',
      'hostname': 'vm%d-m4' % i,
    } for i in precise32_slaves
  )

  # Add experimental slave(s).
  result.append(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_rel_alt',
      'hostname': 'slave101-c4',
   }
  )

  # This is the Clang-based ThreadSanitizer v2, opposed to Valgrind-based
  # ThreadSanitizer v1 on the linux_tsan bot.
  result.append(
   {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_clang_tsan',
      'hostname': 'vm786-m4',
   }
  )

  # Perf bisect slaves
  result.extend(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_perf_bisect_builder',
      'hostname': 'build%d-b4' % i,
    } for i in perf_bisect_builders
  )

  result.extend(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_perf_bisect',
      'hostname': 'chromeperf%d' % i,
    } for i in perf_bisect_slaves
  )

  result.extend(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_perf_bisect',
      'hostname': 'build%d-a4' % i,
    } for i in perf_a4_slaves
  )

  result.append(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_layout_asan',
      'hostname': 'vm426-m4',
    }
  )

  result.append(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '32',
      'builder': 'linux_layout_rel_32',
      'hostname': 'vm495-m4',
    }
  )

  result.extend(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
      'builder': 'linux_arm_cross_compile',
      'hostname': 'vm%d-m4' % i,
    } for i in linux_arm_cross_slaves
  )

  result.extend(
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'quantal',
      'bits': '32',
      'builder': 'linux_arm_tester',
      'hostname': 'build%d-a4' % i,
    } for i in linux_arm_testers
  )

  result.extend([
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'trusty',
      'bits': '64',
      'builder': ['linux_chromium_trusty_dbg', 'linux_chromium_trusty_rel'],
      'hostname': 'build25-a4',
    },
    {
      'master': 'TryServer',
      'os': 'linux',
      'version': 'trusty',
      'bits': '32',
      'builder': ['linux_chromium_trusty32_dbg', 'linux_chromium_trusty32_rel'],
      'hostname': 'build26-a4',
    },
  ])

  return result


def mac():
  extras = [
    # One line per shared directory:
    [['mac_nacl_sdk'], -1],
  ]
  all_old_slaves = [600, 602, 604, 606, 608, 610]
  extras_expanded = expand_extra_builders(extras, len(all_old_slaves))
  perf_bisect_builders = [82, 83, 84 ,85]
  perf_bisect_slaves = [1, 2]
  out = [
    # vms.
    {
      'master': 'TryServer',
      'builder': [
        # One line per shared directory:
        'mac_xcodebuild',
      ] + extras_expanded[index],
      'hostname': 'vm%d-m4' % number,
      'os': 'mac',
      'version': '10.6',
      'bits': '64',
    } for index, number in enumerate(all_old_slaves)
  ]
  out.extend(
    {
      'master': 'TryServer',
      'builder': [
          # One line per shared directory:
          'mac', 'mac_rel', 'mac_rel_naclmore',
          'mac_chromium_dbg', 'mac_chromium_rel',
          'mac_chromium_compile_dbg', 'mac_chromium_compile_rel',

          'mac_valgrind_alt',
          'mac_asan',
          'mac_nacl_sdk_alt',
          'mac_nacl_sdk_build'
      ],
      'hostname': 'vm%d-m4' % i,
      'os': 'mac',
      'version': '10.7',
      'bits': '64',
    } for i in sorted(range(666, 737))
  )

  out.append(
    # 64-bit Mac ASan
    {
      'master': 'TryServer',
      'builder': 'mac_asan_64',
      'hostname': 'vm749-m4',
      'os': 'mac',
      'version': '10.7',
      'bits': '64',
    }
  )

  out.extend(
    # mac swarm 10.6 dumb slaves.
    {
      'master': 'TryServerSwarm',
      'os': 'mac',
      'version': '10.6',
      'bits': '64',
      'hostname': 'vm%d-m4' %i,
    } for i in range(661, 665)
  )

  out.extend(
    # mac swarm 10.8 dumb slaves.
    {
      'master': 'TryServerSwarm',
      'os': 'mac',
      'version': '10.8',
      'bits': '64',
      'hostname': 'vm%d-a4' %i,
    } for i in range(1, 37)
  )

  out.extend(
    # mac swarm 10.8 dumb slaves.
    {
      'master': 'TryServerSwarm',
      'os': 'mac',
      'version': '10.8',
      'bits': '64',
      'hostname': 'vm%d-m4' %i,
    } for i in range(812, 818)
  )

  out.extend(
    {
      'master': 'TryServer',
      'os': 'mac',
      'version': '10.8',
      'bits': '64',
      'builder': 'mac_perf_bisect_builder',
      'hostname': 'vm%d-a4' % i,
    } for i in perf_bisect_builders
  )

  out.extend(
    {
      'master': 'TryServer',
      'os': 'mac',
      'version': '10.8',
      'bits': '64',
      'builder': 'mac_perf_bisect',
      'hostname': 'mini%d-a4' % i,
    } for i in perf_bisect_slaves
  )

  out.extend(
    {
      'master': 'TryServer',
      'os': 'mac',
      'version': '10.8',
      'bits': '64',
      'builder': 'mac_x64_rel',
      'hostname': 'vm%d-m4' % i,
    } for i in range(800, 810)
  )

  out.extend(
    # mac_valgrind - mac minis
    {
      'master': 'TryServer',
      'os': 'mac',
      'version': '10.7',
      'bits': '64',
      'builder': 'mac_valgrind',
      'hostname': 'mini%d-m4' % i,
    } for i in range(84, 90)
  )

  return out


def cros():
  return [
    # vms that are set up with chromiumOS depends
    {
      'master': 'TryServer',
      'builder': 'cros_daisy',
      'hostname': 'build%d-m4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in (1,)
  ] + [
    # baremetal builders that are set up with chromiumOS depends
    {
      'master': 'TryServer',
      'builder': ['cros_x86', 'cros_amd64'],
      'hostname': 'build%d-m4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(22, 26)
  ] + [
    # baremetal builders that are set up with chromiumOS depends
    {
      'master': 'TryServer',
      'builder': ['cros_x86_telemetry', 'cros_amd64_telemetry'],
      'hostname': hostname,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for hostname in [
        'build%d-m4' % i for i in range(14, 17 + 1) ] + [
        'build%d-b4' % i for i in range(1, 40 + 1)
    ]
  ]


def android():
  compile_slaves = [
    {
      'master': 'TryServer',
      'builder': ['android_dbg', 'android_fyi_dbg', 'android_clang_dbg',
                  'android_rel'],
      'hostname': 'vm%d-m4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(384, 421)
  ] + [
    # TODO(navabi): move all vm%d-m4 slaves to ccompute slaves (BUG=302063).
    # ccompute slaves
    {
      'master': 'TryServer',
      'builder': ['android_dbg', 'android_fyi_dbg', 'android_clang_dbg',
                  'blink_android_compile_dbg', 'blink_android_compile_rel',
                  'android_rel', 'android_x86_dbg'],
      'hostname': 'slave%d-c4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(102, 121) + [453]
  ]

  test_slaves = [
    {
      'master': 'TryServer',
      'builder': ['android_dbg_triggered_tests',
                  'android_rel_triggered_tests',
                  'android_fyi_dbg_triggered_tests'],
      'hostname': 'build%d-a4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(100,139+1)
  ]

  perf_bisect_slaves = [
    {
      'master': 'TryServer',
      'builder': 'android_%s_perf_bisect' % device,
      'hostname': host,
      'os': 'linux',
      'version': 'precise',
      'bits': '64'
    } for device, host in [('gn', 'chromeperf48'),
                           ('nexus4', 'build6-a4'),
                           ('nexus10', 'build8-a4')]
  ]

  aosp_slaves = [
    {
      'master': 'TryServer',
      'builder': 'android_aosp',
      'hostname': 'slave%d-c4' % i,
      'os': 'linux',
      'version': 'precise',
      'bits': '64',
    } for i in range(520, 550)
  ]

  return compile_slaves + test_slaves + perf_bisect_slaves + aosp_slaves


def ios():
  compile_slaves = [
    {
      'master': 'TryServer',
      'builder': [
        'ios_rel_device', 'ios_dbg_simulator', 'ios_rel_device_ninja'],
      'hostname': 'build%d-a4' % i,
      'os': 'mac',
      'version': '10.8',
    } for i in range(79, 99)
  ]

  # TODO(lliabraa): Add test_slaves once we're actually running iOS tests on
  # the bots.

  return compile_slaves


def windows():
  win7 = (range(86,100) + range(103, 106) + range(111, 114) +
          range(118, 152) + [167,172] + range(209, 211) + range(213, 215) +
          range(216, 219) + range(220, 223) + range(225, 227) +
          range(229, 231) + range(252, 260) + range(300, 318) +
          range(342, 384) + range(510, 519) + range(525, 530))
  win7_x64 = range(231, 234) + range(235, 252) + range(750, 782)
  perf_bisect_builder_ids = [57, 58, 59, 60]
  perf_bisect_x64_builders = [61, 62, 63, 64]
  perf_bisect_slave_ids = [82]
  perf_a4_slaves = [2, 3]
  perf_xp_a4_slaves = [11]
  perf_8_a4_slaves = [12]

  # 83 / 17 allocation between release bots and debug bots.
  # The split is because the combined binaries of both rel and debug is
  # 40GB, but they're just 15GB/25GB individually, and splitting them will
  # help us mitigate disk space issues on our 60GB bots.
  win7_rel = win7[:len(win7)*5/6]
  win7_dbg = win7[len(win7)*5/6:]

  normal_slaves_rel = [
    {
      'master': 'TryServer',
      'builder': [
        'win', 'win_rel_naclmore', 'win_rel',
        'win_chromium_rel', 'win_chromium_compile_rel',
        'win_nacl_sdk_build'
      ],
      'hostname': 'vm%d-m4' % number,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for number in win7_rel
  ]
  normal_slaves_dbg = [
    {
      'master': 'TryServer',
      'builder': ['win_chromium_dbg', 'win_chromium_compile_dbg'],
      'hostname': 'vm%d-m4' % number,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for number in win7_dbg
  ]
  win_x64_slaves = [
    {
      'master': 'TryServer',
      'builder': [
        'win_x64_rel', 'win_chromium_x64_dbg', 'win_chromium_x64_rel'
      ],
      'hostname': 'vm%d-m4' % number,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for number in win7_x64
  ]
  nacl_sdk_slaves = [
    {
      'master': 'TryServer',
      'builder': [
        'win_nacl_sdk',
      ],
      'hostname': 'vm%d-m4' % number,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for number in range(519, 521)
  ]
  win8_aura_slaves = [
    {
      'master': 'TryServer',
      'builder': [
        'win8_aura',
      ],
      'hostname': 'vm115-m4',
      'os': 'win',
      'version': 'win8',
      'bits': '64',
    }
  ]
  drmemory_slaves = [
    {
      'master': 'TryServer',
      # We can also add 'win' to the list of builders but let's not take risks
      # as this is the only Win7 tryslave now.
      'builder': ['win_drmemory'],
      'hostname': 'vm%d-m4' % i,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for i in (530,)
  ]

  swarm_slaves = []
  for i in range(511, 516):
    swarm_slaves.extend(
      {
        'master': 'TryServer',
        'builder': [
          # Note: they all do the exact same thing, but having different names
          # makes it easier for developpers.
          'linux_swarm_triggered',
          'mac_swarm_triggered',
          'win_swarm_triggered',
        ],
        'hostname': 'slave%d-c4' % i,
        'os': 'linux',
        'version': 'precise',
        'bits': '64',
        'subdir': str(j),
      } for j in xrange(20))

  win_tsan_slave = [
    {
      'master': 'TryServer',
      'builder': ['win_tsan'],
      'hostname': 'vm158-m4',
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    }
  ]
  swarm_win7_dumb_slaves = [
    {
      'master': 'TryServerSwarm',
      'hostname': 'vm%d-m4' % i,
      'os': 'win',
      'version': 'win7',
      'bits': '64',
    } for i in ([184, 189, 194, 199] + range(2, 6) + range(9, 86) +
                range(430, 468) + range(164, 166) + range(169, 171) +
                range(174, 176) + range(179, 181))
  ]

  swarm_winxp_dumb_slaves = [
    {
      'master': 'TryServerSwarm',
      'hostname': 'vm%d-m4' % i,
      'os': 'win',
      'version': 'xp',
      'bits': '32',
    } for i in ([166, 171, 176, 181, 195, 200] + range(185, 187) +
                range(190, 192))
  ]

  # Bisect slaves
  perf_bisect_builders = [
    {
      'master': 'TryServer',
      'os': 'win',
      'version': 'win7',
      'bits': '32',
      'builder': 'win_perf_bisect_builder',
      'hostname': 'build%d-b4' % i,
    } for i in perf_bisect_builder_ids
  ]

  perf_bisect_builders.extend(
    {
      'master': 'TryServer',
      'os': 'win',
      'version': 'win7',
      'bits': '64',
      'builder': 'win_perf_bisect_builder',
      'hostname': 'build%d-b4' % i,
    } for i in perf_bisect_x64_builders
  )

  perf_bisect_slaves = [
    {
      'master': 'TryServer',
      'os': 'win',
      'version': 'win7',
      'bits': '64',
      'builder': 'win_perf_bisect',
      'hostname': 'chromeperf%d' % i,
    } for i in perf_bisect_slave_ids
  ]

  perf_bisect_slaves.extend(
    {
      'master': 'TryServer',
      'os': 'win',
      'version': 'win7',
      'bits': '64',
      'builder': 'win_perf_bisect',
      'hostname': 'build%d-a4' % i,
    } for i in perf_a4_slaves
  )

  perf_bisect_slaves.extend(
    {
      'master': 'TryServer',
      'os': 'win',
      'version': 'xp',
      'bits': '32',
      'builder': 'win_xp_perf_bisect',
      'hostname': 'build%d-a4' % i,
    } for i in perf_xp_a4_slaves
  )

  perf_bisect_slaves.extend(
    {
      'master': 'TryServer',
      'os': 'win',
      'version': 'win8',
      'bits': '64',
      'builder': 'win_8_perf_bisect',
      'hostname': 'build%d-a4' % i,
    } for i in perf_8_a4_slaves
  )

  return (
      normal_slaves_rel +
      normal_slaves_dbg +
      nacl_sdk_slaves +
      win8_aura_slaves +
      drmemory_slaves +
      swarm_slaves +
      win_tsan_slave +
      win_x64_slaves +
      swarm_win7_dumb_slaves +
      swarm_winxp_dumb_slaves +
      perf_bisect_slaves +
      perf_bisect_builders)


slaves = linux() + mac() + windows() + cros() + android() + ios()
