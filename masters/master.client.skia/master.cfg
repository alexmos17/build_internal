# Copyright (c) 2011 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
# vim: set ft=python:

from buildbot.changes.gitpoller import GitPoller

from master import build_utils
from master import master_config
from master import master_utils
from master import recipe_master_helper
from master import slaves_list
from master.factory import annotator_factory

import config
import master_site_config


ActiveMaster = master_site_config.Skia

c = BuildmasterConfig = {}

config.DatabaseSetup(c, require_dbconfig=ActiveMaster.is_production_host)

####### CHANGESOURCES

# Polls config.Master.trunk_url for changes
poller = GitPoller(
    repourl=ActiveMaster.repo_url,
    branch='master',
    pollinterval=10,
    revlinktmpl='https://skia.googlesource.com/skia/+/%s')


c['change_source'] = [poller]


####### SLAVES

# Load the slave list. We need some information from it in order to
# produce the builders.
slaves = slaves_list.SlavesList('slaves.cfg', 'Skia')

####### SCHEDULERS

## configure the Schedulers

# Main scheduler for all changes in trunk.

trigger_name_map = recipe_master_helper.AddSchedulersAndTriggers(
  buildmaster_config=c, slave_list=slaves, scheduler_name='skia', branch='master')

####### BUILDERS

builders = []

# ----------------------------------------------------------------------------
# FACTORIES

m_annotator = annotator_factory.AnnotatorFactory()

recipe_master_helper.AddRecipeBasedBuilders(
  c, slaves, m_annotator, trigger_name_map)

# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])

####### BUILDSLAVES

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())

master_utils.VerifySetup(c, slaves)

####### STATUS TARGETS

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
    public_html='../master.chromium/public_html',
    templates=['../master.chromium/templates'],
    enable_http_status_push=ActiveMaster.is_production_host,
    order_console_by_time=True)
