# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from buildbot.schedulers.basic import SingleBranchScheduler

from common import chromium_utils

# These modules come from scripts/master, which must be in the PYTHONPATH.
from master import chromium_svn_poller
from master import chromium_notifier
from master import master_config
from master import master_utils
from master import slaves_list

from master.factory import chromium_factory

# These modules come from scripts/common, which must be in the PYTHONPATH.
import config
import master_site_config


ActiveMaster = master_site_config.ChromiumChromiumOS

CODESEARCH_NOTIFIER = True
STATUS_PUSH = False

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

config.DatabaseSetup(c, require_dbconfig=ActiveMaster.is_production_host)

####### CHANGESOURCES

trunk_poller = chromium_svn_poller.ChromiumSvnPoller()

# TODO(petermayo): Make this sensitive to LKGM changes too, crosbug.com/20798

c['change_source'] = [trunk_poller]

c['schedulers'] = []
c['builders'] = []

# import sub configs

import master_chromiumos_cfg

master_chromiumos_cfg.Update(config, ActiveMaster, c)


# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'ChromiumChromiumOS')
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])


####### BUILDSLAVES

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(
  c['builders'],
  config.Master.GetBotPassword(),
  missing_recipients=['buildbot@chromium-build-health.appspotmail.com'])

# Make sure everything works together.
master_utils.VerifySetup(c, slaves)


####### STATUS TARGETS

# Buildbot master url:
# Must come before AutoSetupMaster().
c['buildbotURL'] = ActiveMaster.buildbot_url

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
    public_html='../master.chromium/public_html',
    templates=['../master.chromium/templates'],
    tagComparator=getattr(trunk_poller, 'comparator', None),
    enable_http_status_push=ActiveMaster.is_production_host)
