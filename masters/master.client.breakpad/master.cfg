# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# These modules come from scripts/master, which must be in the PYTHONPATH.
from buildbot.status import mail
from master import master_utils
from master import slaves_list
from master.factory import annotator_factory

import config
import master_site_config
ActiveMaster = master_site_config.Breakpad

def recipe_factory(recipe):
  return annotator_factory.AnnotatorFactory().BaseFactory(recipe=recipe)

c = BuildmasterConfig = {}
c['change_source'] = []
c['schedulers'] = []
c['builders'] = []
c['status'] = []


# Set up a mail notifier to email to the sawbuck change group on every build.
c['status'].append(
    mail.MailNotifier(fromaddr="buildbot@chromium.org",
                      sendToInterestedUsers=False,
                      extraRecipients=['google-breakpad-dev@googlegroups.com'],
                      mode='all',
                      relayhost=config.Master.smtp))

# Associate the slaves to the manual builders. Configuration is in slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'Breakpad')

builder_name = 'breakpad-builder'
c['builders'].append({
    'name': builder_name,
    'slavenames': slaves.GetSlavesName(builder=builder_name),
    'builddir': builder_name,
    # TODO(chrisha): Make this into a recipe. This is here as a placeholder so
    # that we can bring up the slave.
    'factory': annotator_factory.AnnotatorFactory().BaseFactory('breakpad'),
    'auto_reboot': True,
})

for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())
master_utils.VerifySetup(c, slaves)

# Buildbot master url:
# Must come before AutoSetupMaster().
c['buildbotURL'] = ActiveMaster.buildbot_url

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
    public_html='../master.chromium/public_html',
    templates=['../master.chromium/templates'])
